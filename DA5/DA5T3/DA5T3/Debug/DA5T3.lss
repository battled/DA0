
DA5T3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000446  000004ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000446  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00001c14  00000000  00000000  000004bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000006f3  00000000  00000000  000020d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  000027c3  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000027f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000144  00000000  00000000  00002812  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000df  00000000  00000000  00002956  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000018a  00000000  00000000  00002a35  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00002bc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000101  00000000  00000000  00002be4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000034  00000000  00000000  00002ce5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  00002d19  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 21 02 	jmp	0x442	; 0x442 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

int main()

{
	//PORTD pins as input
	DDRD = 0xFF;
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	8a b9       	out	0x0a, r24	; 10
	//Enable internal pull ups
	PORTD = 0xFF;
  84:	8b b9       	out	0x0b, r24	; 11
	//Set PORTB1 pin as output
	DDRB = 0xFF;
  86:	84 b9       	out	0x04, r24	; 4
	ADCSRA	= 0x80;	//use AREF, internal Vref turned off, ck/2
  88:	80 e8       	ldi	r24, 0x80	; 128
  8a:	80 93 7a 00 	sts	0x007A, r24
	ADMUX=0;	//ADC single ended input
  8e:	10 92 7c 00 	sts	0x007C, r1
	//output compare OC1A 8 bit non inverted PWM
	//Clear OC1A on Compare Match, set OC1A at TOP
	//Fast PWM
	//ICR1 = 20000 defines 50Hz pwm
	float adcConv;
	ICR1 = 20000;
  92:	80 e2       	ldi	r24, 0x20	; 32
  94:	9e e4       	ldi	r25, 0x4E	; 78
  96:	90 93 87 00 	sts	0x0087, r25
  9a:	80 93 86 00 	sts	0x0086, r24
	TCCR1A|=(0<<COM1A0)|(1<<COM1A1)|(0<<COM1B0)|(0<<COM1B1)|(0<<FOC1A)|(0<<FOC1B)|(1<<WGM11)|(0<<WGM10); //TCCR1A = 0x82
  9e:	e0 e8       	ldi	r30, 0x80	; 128
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	80 81       	ld	r24, Z
  a4:	82 68       	ori	r24, 0x82	; 130
  a6:	80 83       	st	Z, r24
	TCCR1B|=(0<<ICNC1)|(0<<ICES1)|(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(1<<CS11)|(0<<CS10);
  a8:	e1 e8       	ldi	r30, 0x81	; 129
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	8a 61       	ori	r24, 0x1A	; 26
  b0:	80 83       	st	Z, r24
	//TCCR1B = 0x1A
	//start timer with prescaler 8
	OCR1A = 500;
  b2:	84 ef       	ldi	r24, 0xF4	; 244
  b4:	91 e0       	ldi	r25, 0x01	; 1
  b6:	90 93 89 00 	sts	0x0089, r25
  ba:	80 93 88 00 	sts	0x0088, r24
	while(1)
	{
		ADCSRA |= (1<<ADSC);			//start conversion
  be:	ca e7       	ldi	r28, 0x7A	; 122
  c0:	d0 e0       	ldi	r29, 0x00	; 0
		while((ADCSRA&(1<<ADIF))==0);	//wait for conversion to finish
		adcConv =1024-ADC;
  c2:	0f 2e       	mov	r0, r31
  c4:	f8 e7       	ldi	r31, 0x78	; 120
  c6:	cf 2e       	mov	r12, r31
  c8:	d1 2c       	mov	r13, r1
  ca:	f0 2d       	mov	r31, r0
  cc:	e1 2c       	mov	r14, r1
  ce:	68 94       	set
  d0:	ff 24       	eor	r15, r15
  d2:	f2 f8       	bld	r15, 2
		adcConv /=1024;					//convert ADC value (0->1024 as a ratio by dividing by 1024)
		adcConv *=1800;					//convert ADC value to scale of our servo by multiplying by 1800
		adcConv += 500;					//add constant 500 as 0 degrees ==500 

		
		OCR1A =(int)adcConv;					//store adc
  d4:	08 e8       	ldi	r16, 0x88	; 136
  d6:	10 e0       	ldi	r17, 0x00	; 0
	//TCCR1B = 0x1A
	//start timer with prescaler 8
	OCR1A = 500;
	while(1)
	{
		ADCSRA |= (1<<ADSC);			//start conversion
  d8:	88 81       	ld	r24, Y
  da:	80 64       	ori	r24, 0x40	; 64
  dc:	88 83       	st	Y, r24
		while((ADCSRA&(1<<ADIF))==0);	//wait for conversion to finish
  de:	88 81       	ld	r24, Y
  e0:	84 ff       	sbrs	r24, 4
  e2:	fd cf       	rjmp	.-6      	; 0xde <main+0x5e>
		adcConv =1024-ADC;
  e4:	f6 01       	movw	r30, r12
  e6:	80 81       	ld	r24, Z
  e8:	91 81       	ldd	r25, Z+1	; 0x01
  ea:	b7 01       	movw	r22, r14
  ec:	68 1b       	sub	r22, r24
  ee:	79 0b       	sbc	r23, r25
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	0e 94 30 01 	call	0x260	; 0x260 <__floatunsisf>
		adcConv /=1024;					//convert ADC value (0->1024 as a ratio by dividing by 1024)
  f8:	20 e0       	ldi	r18, 0x00	; 0
  fa:	30 e0       	ldi	r19, 0x00	; 0
  fc:	40 e8       	ldi	r20, 0x80	; 128
  fe:	5a e3       	ldi	r21, 0x3A	; 58
 100:	0e 94 be 01 	call	0x37c	; 0x37c <__mulsf3>
		adcConv *=1800;					//convert ADC value to scale of our servo by multiplying by 1800
 104:	20 e0       	ldi	r18, 0x00	; 0
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	41 ee       	ldi	r20, 0xE1	; 225
 10a:	54 e4       	ldi	r21, 0x44	; 68
 10c:	0e 94 be 01 	call	0x37c	; 0x37c <__mulsf3>
		adcConv += 500;					//add constant 500 as 0 degrees ==500 
 110:	20 e0       	ldi	r18, 0x00	; 0
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	4a ef       	ldi	r20, 0xFA	; 250
 116:	53 e4       	ldi	r21, 0x43	; 67
 118:	0e 94 9b 00 	call	0x136	; 0x136 <__addsf3>

		
		OCR1A =(int)adcConv;					//store adc
 11c:	0e 94 ff 00 	call	0x1fe	; 0x1fe <__fixsfsi>
 120:	f8 01       	movw	r30, r16
 122:	71 83       	std	Z+1, r23	; 0x01
 124:	60 83       	st	Z, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 126:	83 e2       	ldi	r24, 0x23	; 35
 128:	94 ef       	ldi	r25, 0xF4	; 244
 12a:	01 97       	sbiw	r24, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <main+0xaa>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <main+0xb0>
 130:	00 00       	nop
 132:	d2 cf       	rjmp	.-92     	; 0xd8 <main+0x58>

00000134 <__subsf3>:
 134:	50 58       	subi	r21, 0x80	; 128

00000136 <__addsf3>:
 136:	bb 27       	eor	r27, r27
 138:	aa 27       	eor	r26, r26
 13a:	0e d0       	rcall	.+28     	; 0x158 <__addsf3x>
 13c:	e5 c0       	rjmp	.+458    	; 0x308 <__fp_round>
 13e:	d6 d0       	rcall	.+428    	; 0x2ec <__fp_pscA>
 140:	30 f0       	brcs	.+12     	; 0x14e <__addsf3+0x18>
 142:	db d0       	rcall	.+438    	; 0x2fa <__fp_pscB>
 144:	20 f0       	brcs	.+8      	; 0x14e <__addsf3+0x18>
 146:	31 f4       	brne	.+12     	; 0x154 <__addsf3+0x1e>
 148:	9f 3f       	cpi	r25, 0xFF	; 255
 14a:	11 f4       	brne	.+4      	; 0x150 <__addsf3+0x1a>
 14c:	1e f4       	brtc	.+6      	; 0x154 <__addsf3+0x1e>
 14e:	cb c0       	rjmp	.+406    	; 0x2e6 <__fp_nan>
 150:	0e f4       	brtc	.+2      	; 0x154 <__addsf3+0x1e>
 152:	e0 95       	com	r30
 154:	e7 fb       	bst	r30, 7
 156:	c1 c0       	rjmp	.+386    	; 0x2da <__fp_inf>

00000158 <__addsf3x>:
 158:	e9 2f       	mov	r30, r25
 15a:	e7 d0       	rcall	.+462    	; 0x32a <__fp_split3>
 15c:	80 f3       	brcs	.-32     	; 0x13e <__addsf3+0x8>
 15e:	ba 17       	cp	r27, r26
 160:	62 07       	cpc	r22, r18
 162:	73 07       	cpc	r23, r19
 164:	84 07       	cpc	r24, r20
 166:	95 07       	cpc	r25, r21
 168:	18 f0       	brcs	.+6      	; 0x170 <__addsf3x+0x18>
 16a:	71 f4       	brne	.+28     	; 0x188 <__addsf3x+0x30>
 16c:	9e f5       	brtc	.+102    	; 0x1d4 <__addsf3x+0x7c>
 16e:	ff c0       	rjmp	.+510    	; 0x36e <__fp_zero>
 170:	0e f4       	brtc	.+2      	; 0x174 <__addsf3x+0x1c>
 172:	e0 95       	com	r30
 174:	0b 2e       	mov	r0, r27
 176:	ba 2f       	mov	r27, r26
 178:	a0 2d       	mov	r26, r0
 17a:	0b 01       	movw	r0, r22
 17c:	b9 01       	movw	r22, r18
 17e:	90 01       	movw	r18, r0
 180:	0c 01       	movw	r0, r24
 182:	ca 01       	movw	r24, r20
 184:	a0 01       	movw	r20, r0
 186:	11 24       	eor	r1, r1
 188:	ff 27       	eor	r31, r31
 18a:	59 1b       	sub	r21, r25
 18c:	99 f0       	breq	.+38     	; 0x1b4 <__addsf3x+0x5c>
 18e:	59 3f       	cpi	r21, 0xF9	; 249
 190:	50 f4       	brcc	.+20     	; 0x1a6 <__addsf3x+0x4e>
 192:	50 3e       	cpi	r21, 0xE0	; 224
 194:	68 f1       	brcs	.+90     	; 0x1f0 <__addsf3x+0x98>
 196:	1a 16       	cp	r1, r26
 198:	f0 40       	sbci	r31, 0x00	; 0
 19a:	a2 2f       	mov	r26, r18
 19c:	23 2f       	mov	r18, r19
 19e:	34 2f       	mov	r19, r20
 1a0:	44 27       	eor	r20, r20
 1a2:	58 5f       	subi	r21, 0xF8	; 248
 1a4:	f3 cf       	rjmp	.-26     	; 0x18c <__addsf3x+0x34>
 1a6:	46 95       	lsr	r20
 1a8:	37 95       	ror	r19
 1aa:	27 95       	ror	r18
 1ac:	a7 95       	ror	r26
 1ae:	f0 40       	sbci	r31, 0x00	; 0
 1b0:	53 95       	inc	r21
 1b2:	c9 f7       	brne	.-14     	; 0x1a6 <__addsf3x+0x4e>
 1b4:	7e f4       	brtc	.+30     	; 0x1d4 <__addsf3x+0x7c>
 1b6:	1f 16       	cp	r1, r31
 1b8:	ba 0b       	sbc	r27, r26
 1ba:	62 0b       	sbc	r22, r18
 1bc:	73 0b       	sbc	r23, r19
 1be:	84 0b       	sbc	r24, r20
 1c0:	ba f0       	brmi	.+46     	; 0x1f0 <__addsf3x+0x98>
 1c2:	91 50       	subi	r25, 0x01	; 1
 1c4:	a1 f0       	breq	.+40     	; 0x1ee <__addsf3x+0x96>
 1c6:	ff 0f       	add	r31, r31
 1c8:	bb 1f       	adc	r27, r27
 1ca:	66 1f       	adc	r22, r22
 1cc:	77 1f       	adc	r23, r23
 1ce:	88 1f       	adc	r24, r24
 1d0:	c2 f7       	brpl	.-16     	; 0x1c2 <__addsf3x+0x6a>
 1d2:	0e c0       	rjmp	.+28     	; 0x1f0 <__addsf3x+0x98>
 1d4:	ba 0f       	add	r27, r26
 1d6:	62 1f       	adc	r22, r18
 1d8:	73 1f       	adc	r23, r19
 1da:	84 1f       	adc	r24, r20
 1dc:	48 f4       	brcc	.+18     	; 0x1f0 <__addsf3x+0x98>
 1de:	87 95       	ror	r24
 1e0:	77 95       	ror	r23
 1e2:	67 95       	ror	r22
 1e4:	b7 95       	ror	r27
 1e6:	f7 95       	ror	r31
 1e8:	9e 3f       	cpi	r25, 0xFE	; 254
 1ea:	08 f0       	brcs	.+2      	; 0x1ee <__addsf3x+0x96>
 1ec:	b3 cf       	rjmp	.-154    	; 0x154 <__addsf3+0x1e>
 1ee:	93 95       	inc	r25
 1f0:	88 0f       	add	r24, r24
 1f2:	08 f0       	brcs	.+2      	; 0x1f6 <__addsf3x+0x9e>
 1f4:	99 27       	eor	r25, r25
 1f6:	ee 0f       	add	r30, r30
 1f8:	97 95       	ror	r25
 1fa:	87 95       	ror	r24
 1fc:	08 95       	ret

000001fe <__fixsfsi>:
 1fe:	04 d0       	rcall	.+8      	; 0x208 <__fixunssfsi>
 200:	68 94       	set
 202:	b1 11       	cpse	r27, r1
 204:	b5 c0       	rjmp	.+362    	; 0x370 <__fp_szero>
 206:	08 95       	ret

00000208 <__fixunssfsi>:
 208:	98 d0       	rcall	.+304    	; 0x33a <__fp_splitA>
 20a:	88 f0       	brcs	.+34     	; 0x22e <__fixunssfsi+0x26>
 20c:	9f 57       	subi	r25, 0x7F	; 127
 20e:	90 f0       	brcs	.+36     	; 0x234 <__fixunssfsi+0x2c>
 210:	b9 2f       	mov	r27, r25
 212:	99 27       	eor	r25, r25
 214:	b7 51       	subi	r27, 0x17	; 23
 216:	a0 f0       	brcs	.+40     	; 0x240 <__fixunssfsi+0x38>
 218:	d1 f0       	breq	.+52     	; 0x24e <__fixunssfsi+0x46>
 21a:	66 0f       	add	r22, r22
 21c:	77 1f       	adc	r23, r23
 21e:	88 1f       	adc	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	1a f0       	brmi	.+6      	; 0x22a <__fixunssfsi+0x22>
 224:	ba 95       	dec	r27
 226:	c9 f7       	brne	.-14     	; 0x21a <__fixunssfsi+0x12>
 228:	12 c0       	rjmp	.+36     	; 0x24e <__fixunssfsi+0x46>
 22a:	b1 30       	cpi	r27, 0x01	; 1
 22c:	81 f0       	breq	.+32     	; 0x24e <__fixunssfsi+0x46>
 22e:	9f d0       	rcall	.+318    	; 0x36e <__fp_zero>
 230:	b1 e0       	ldi	r27, 0x01	; 1
 232:	08 95       	ret
 234:	9c c0       	rjmp	.+312    	; 0x36e <__fp_zero>
 236:	67 2f       	mov	r22, r23
 238:	78 2f       	mov	r23, r24
 23a:	88 27       	eor	r24, r24
 23c:	b8 5f       	subi	r27, 0xF8	; 248
 23e:	39 f0       	breq	.+14     	; 0x24e <__fixunssfsi+0x46>
 240:	b9 3f       	cpi	r27, 0xF9	; 249
 242:	cc f3       	brlt	.-14     	; 0x236 <__fixunssfsi+0x2e>
 244:	86 95       	lsr	r24
 246:	77 95       	ror	r23
 248:	67 95       	ror	r22
 24a:	b3 95       	inc	r27
 24c:	d9 f7       	brne	.-10     	; 0x244 <__fixunssfsi+0x3c>
 24e:	3e f4       	brtc	.+14     	; 0x25e <__fixunssfsi+0x56>
 250:	90 95       	com	r25
 252:	80 95       	com	r24
 254:	70 95       	com	r23
 256:	61 95       	neg	r22
 258:	7f 4f       	sbci	r23, 0xFF	; 255
 25a:	8f 4f       	sbci	r24, 0xFF	; 255
 25c:	9f 4f       	sbci	r25, 0xFF	; 255
 25e:	08 95       	ret

00000260 <__floatunsisf>:
 260:	e8 94       	clt
 262:	09 c0       	rjmp	.+18     	; 0x276 <__floatsisf+0x12>

00000264 <__floatsisf>:
 264:	97 fb       	bst	r25, 7
 266:	3e f4       	brtc	.+14     	; 0x276 <__floatsisf+0x12>
 268:	90 95       	com	r25
 26a:	80 95       	com	r24
 26c:	70 95       	com	r23
 26e:	61 95       	neg	r22
 270:	7f 4f       	sbci	r23, 0xFF	; 255
 272:	8f 4f       	sbci	r24, 0xFF	; 255
 274:	9f 4f       	sbci	r25, 0xFF	; 255
 276:	99 23       	and	r25, r25
 278:	a9 f0       	breq	.+42     	; 0x2a4 <__floatsisf+0x40>
 27a:	f9 2f       	mov	r31, r25
 27c:	96 e9       	ldi	r25, 0x96	; 150
 27e:	bb 27       	eor	r27, r27
 280:	93 95       	inc	r25
 282:	f6 95       	lsr	r31
 284:	87 95       	ror	r24
 286:	77 95       	ror	r23
 288:	67 95       	ror	r22
 28a:	b7 95       	ror	r27
 28c:	f1 11       	cpse	r31, r1
 28e:	f8 cf       	rjmp	.-16     	; 0x280 <__floatsisf+0x1c>
 290:	fa f4       	brpl	.+62     	; 0x2d0 <__floatsisf+0x6c>
 292:	bb 0f       	add	r27, r27
 294:	11 f4       	brne	.+4      	; 0x29a <__floatsisf+0x36>
 296:	60 ff       	sbrs	r22, 0
 298:	1b c0       	rjmp	.+54     	; 0x2d0 <__floatsisf+0x6c>
 29a:	6f 5f       	subi	r22, 0xFF	; 255
 29c:	7f 4f       	sbci	r23, 0xFF	; 255
 29e:	8f 4f       	sbci	r24, 0xFF	; 255
 2a0:	9f 4f       	sbci	r25, 0xFF	; 255
 2a2:	16 c0       	rjmp	.+44     	; 0x2d0 <__floatsisf+0x6c>
 2a4:	88 23       	and	r24, r24
 2a6:	11 f0       	breq	.+4      	; 0x2ac <__floatsisf+0x48>
 2a8:	96 e9       	ldi	r25, 0x96	; 150
 2aa:	11 c0       	rjmp	.+34     	; 0x2ce <__floatsisf+0x6a>
 2ac:	77 23       	and	r23, r23
 2ae:	21 f0       	breq	.+8      	; 0x2b8 <__floatsisf+0x54>
 2b0:	9e e8       	ldi	r25, 0x8E	; 142
 2b2:	87 2f       	mov	r24, r23
 2b4:	76 2f       	mov	r23, r22
 2b6:	05 c0       	rjmp	.+10     	; 0x2c2 <__floatsisf+0x5e>
 2b8:	66 23       	and	r22, r22
 2ba:	71 f0       	breq	.+28     	; 0x2d8 <__floatsisf+0x74>
 2bc:	96 e8       	ldi	r25, 0x86	; 134
 2be:	86 2f       	mov	r24, r22
 2c0:	70 e0       	ldi	r23, 0x00	; 0
 2c2:	60 e0       	ldi	r22, 0x00	; 0
 2c4:	2a f0       	brmi	.+10     	; 0x2d0 <__floatsisf+0x6c>
 2c6:	9a 95       	dec	r25
 2c8:	66 0f       	add	r22, r22
 2ca:	77 1f       	adc	r23, r23
 2cc:	88 1f       	adc	r24, r24
 2ce:	da f7       	brpl	.-10     	; 0x2c6 <__floatsisf+0x62>
 2d0:	88 0f       	add	r24, r24
 2d2:	96 95       	lsr	r25
 2d4:	87 95       	ror	r24
 2d6:	97 f9       	bld	r25, 7
 2d8:	08 95       	ret

000002da <__fp_inf>:
 2da:	97 f9       	bld	r25, 7
 2dc:	9f 67       	ori	r25, 0x7F	; 127
 2de:	80 e8       	ldi	r24, 0x80	; 128
 2e0:	70 e0       	ldi	r23, 0x00	; 0
 2e2:	60 e0       	ldi	r22, 0x00	; 0
 2e4:	08 95       	ret

000002e6 <__fp_nan>:
 2e6:	9f ef       	ldi	r25, 0xFF	; 255
 2e8:	80 ec       	ldi	r24, 0xC0	; 192
 2ea:	08 95       	ret

000002ec <__fp_pscA>:
 2ec:	00 24       	eor	r0, r0
 2ee:	0a 94       	dec	r0
 2f0:	16 16       	cp	r1, r22
 2f2:	17 06       	cpc	r1, r23
 2f4:	18 06       	cpc	r1, r24
 2f6:	09 06       	cpc	r0, r25
 2f8:	08 95       	ret

000002fa <__fp_pscB>:
 2fa:	00 24       	eor	r0, r0
 2fc:	0a 94       	dec	r0
 2fe:	12 16       	cp	r1, r18
 300:	13 06       	cpc	r1, r19
 302:	14 06       	cpc	r1, r20
 304:	05 06       	cpc	r0, r21
 306:	08 95       	ret

00000308 <__fp_round>:
 308:	09 2e       	mov	r0, r25
 30a:	03 94       	inc	r0
 30c:	00 0c       	add	r0, r0
 30e:	11 f4       	brne	.+4      	; 0x314 <__fp_round+0xc>
 310:	88 23       	and	r24, r24
 312:	52 f0       	brmi	.+20     	; 0x328 <__fp_round+0x20>
 314:	bb 0f       	add	r27, r27
 316:	40 f4       	brcc	.+16     	; 0x328 <__fp_round+0x20>
 318:	bf 2b       	or	r27, r31
 31a:	11 f4       	brne	.+4      	; 0x320 <__fp_round+0x18>
 31c:	60 ff       	sbrs	r22, 0
 31e:	04 c0       	rjmp	.+8      	; 0x328 <__fp_round+0x20>
 320:	6f 5f       	subi	r22, 0xFF	; 255
 322:	7f 4f       	sbci	r23, 0xFF	; 255
 324:	8f 4f       	sbci	r24, 0xFF	; 255
 326:	9f 4f       	sbci	r25, 0xFF	; 255
 328:	08 95       	ret

0000032a <__fp_split3>:
 32a:	57 fd       	sbrc	r21, 7
 32c:	90 58       	subi	r25, 0x80	; 128
 32e:	44 0f       	add	r20, r20
 330:	55 1f       	adc	r21, r21
 332:	59 f0       	breq	.+22     	; 0x34a <__fp_splitA+0x10>
 334:	5f 3f       	cpi	r21, 0xFF	; 255
 336:	71 f0       	breq	.+28     	; 0x354 <__fp_splitA+0x1a>
 338:	47 95       	ror	r20

0000033a <__fp_splitA>:
 33a:	88 0f       	add	r24, r24
 33c:	97 fb       	bst	r25, 7
 33e:	99 1f       	adc	r25, r25
 340:	61 f0       	breq	.+24     	; 0x35a <__fp_splitA+0x20>
 342:	9f 3f       	cpi	r25, 0xFF	; 255
 344:	79 f0       	breq	.+30     	; 0x364 <__fp_splitA+0x2a>
 346:	87 95       	ror	r24
 348:	08 95       	ret
 34a:	12 16       	cp	r1, r18
 34c:	13 06       	cpc	r1, r19
 34e:	14 06       	cpc	r1, r20
 350:	55 1f       	adc	r21, r21
 352:	f2 cf       	rjmp	.-28     	; 0x338 <__fp_split3+0xe>
 354:	46 95       	lsr	r20
 356:	f1 df       	rcall	.-30     	; 0x33a <__fp_splitA>
 358:	08 c0       	rjmp	.+16     	; 0x36a <__fp_splitA+0x30>
 35a:	16 16       	cp	r1, r22
 35c:	17 06       	cpc	r1, r23
 35e:	18 06       	cpc	r1, r24
 360:	99 1f       	adc	r25, r25
 362:	f1 cf       	rjmp	.-30     	; 0x346 <__fp_splitA+0xc>
 364:	86 95       	lsr	r24
 366:	71 05       	cpc	r23, r1
 368:	61 05       	cpc	r22, r1
 36a:	08 94       	sec
 36c:	08 95       	ret

0000036e <__fp_zero>:
 36e:	e8 94       	clt

00000370 <__fp_szero>:
 370:	bb 27       	eor	r27, r27
 372:	66 27       	eor	r22, r22
 374:	77 27       	eor	r23, r23
 376:	cb 01       	movw	r24, r22
 378:	97 f9       	bld	r25, 7
 37a:	08 95       	ret

0000037c <__mulsf3>:
 37c:	0b d0       	rcall	.+22     	; 0x394 <__mulsf3x>
 37e:	c4 cf       	rjmp	.-120    	; 0x308 <__fp_round>
 380:	b5 df       	rcall	.-150    	; 0x2ec <__fp_pscA>
 382:	28 f0       	brcs	.+10     	; 0x38e <__mulsf3+0x12>
 384:	ba df       	rcall	.-140    	; 0x2fa <__fp_pscB>
 386:	18 f0       	brcs	.+6      	; 0x38e <__mulsf3+0x12>
 388:	95 23       	and	r25, r21
 38a:	09 f0       	breq	.+2      	; 0x38e <__mulsf3+0x12>
 38c:	a6 cf       	rjmp	.-180    	; 0x2da <__fp_inf>
 38e:	ab cf       	rjmp	.-170    	; 0x2e6 <__fp_nan>
 390:	11 24       	eor	r1, r1
 392:	ee cf       	rjmp	.-36     	; 0x370 <__fp_szero>

00000394 <__mulsf3x>:
 394:	ca df       	rcall	.-108    	; 0x32a <__fp_split3>
 396:	a0 f3       	brcs	.-24     	; 0x380 <__mulsf3+0x4>

00000398 <__mulsf3_pse>:
 398:	95 9f       	mul	r25, r21
 39a:	d1 f3       	breq	.-12     	; 0x390 <__mulsf3+0x14>
 39c:	95 0f       	add	r25, r21
 39e:	50 e0       	ldi	r21, 0x00	; 0
 3a0:	55 1f       	adc	r21, r21
 3a2:	62 9f       	mul	r22, r18
 3a4:	f0 01       	movw	r30, r0
 3a6:	72 9f       	mul	r23, r18
 3a8:	bb 27       	eor	r27, r27
 3aa:	f0 0d       	add	r31, r0
 3ac:	b1 1d       	adc	r27, r1
 3ae:	63 9f       	mul	r22, r19
 3b0:	aa 27       	eor	r26, r26
 3b2:	f0 0d       	add	r31, r0
 3b4:	b1 1d       	adc	r27, r1
 3b6:	aa 1f       	adc	r26, r26
 3b8:	64 9f       	mul	r22, r20
 3ba:	66 27       	eor	r22, r22
 3bc:	b0 0d       	add	r27, r0
 3be:	a1 1d       	adc	r26, r1
 3c0:	66 1f       	adc	r22, r22
 3c2:	82 9f       	mul	r24, r18
 3c4:	22 27       	eor	r18, r18
 3c6:	b0 0d       	add	r27, r0
 3c8:	a1 1d       	adc	r26, r1
 3ca:	62 1f       	adc	r22, r18
 3cc:	73 9f       	mul	r23, r19
 3ce:	b0 0d       	add	r27, r0
 3d0:	a1 1d       	adc	r26, r1
 3d2:	62 1f       	adc	r22, r18
 3d4:	83 9f       	mul	r24, r19
 3d6:	a0 0d       	add	r26, r0
 3d8:	61 1d       	adc	r22, r1
 3da:	22 1f       	adc	r18, r18
 3dc:	74 9f       	mul	r23, r20
 3de:	33 27       	eor	r19, r19
 3e0:	a0 0d       	add	r26, r0
 3e2:	61 1d       	adc	r22, r1
 3e4:	23 1f       	adc	r18, r19
 3e6:	84 9f       	mul	r24, r20
 3e8:	60 0d       	add	r22, r0
 3ea:	21 1d       	adc	r18, r1
 3ec:	82 2f       	mov	r24, r18
 3ee:	76 2f       	mov	r23, r22
 3f0:	6a 2f       	mov	r22, r26
 3f2:	11 24       	eor	r1, r1
 3f4:	9f 57       	subi	r25, 0x7F	; 127
 3f6:	50 40       	sbci	r21, 0x00	; 0
 3f8:	8a f0       	brmi	.+34     	; 0x41c <__mulsf3_pse+0x84>
 3fa:	e1 f0       	breq	.+56     	; 0x434 <__mulsf3_pse+0x9c>
 3fc:	88 23       	and	r24, r24
 3fe:	4a f0       	brmi	.+18     	; 0x412 <__mulsf3_pse+0x7a>
 400:	ee 0f       	add	r30, r30
 402:	ff 1f       	adc	r31, r31
 404:	bb 1f       	adc	r27, r27
 406:	66 1f       	adc	r22, r22
 408:	77 1f       	adc	r23, r23
 40a:	88 1f       	adc	r24, r24
 40c:	91 50       	subi	r25, 0x01	; 1
 40e:	50 40       	sbci	r21, 0x00	; 0
 410:	a9 f7       	brne	.-22     	; 0x3fc <__mulsf3_pse+0x64>
 412:	9e 3f       	cpi	r25, 0xFE	; 254
 414:	51 05       	cpc	r21, r1
 416:	70 f0       	brcs	.+28     	; 0x434 <__mulsf3_pse+0x9c>
 418:	60 cf       	rjmp	.-320    	; 0x2da <__fp_inf>
 41a:	aa cf       	rjmp	.-172    	; 0x370 <__fp_szero>
 41c:	5f 3f       	cpi	r21, 0xFF	; 255
 41e:	ec f3       	brlt	.-6      	; 0x41a <__mulsf3_pse+0x82>
 420:	98 3e       	cpi	r25, 0xE8	; 232
 422:	dc f3       	brlt	.-10     	; 0x41a <__mulsf3_pse+0x82>
 424:	86 95       	lsr	r24
 426:	77 95       	ror	r23
 428:	67 95       	ror	r22
 42a:	b7 95       	ror	r27
 42c:	f7 95       	ror	r31
 42e:	e7 95       	ror	r30
 430:	9f 5f       	subi	r25, 0xFF	; 255
 432:	c1 f7       	brne	.-16     	; 0x424 <__mulsf3_pse+0x8c>
 434:	fe 2b       	or	r31, r30
 436:	88 0f       	add	r24, r24
 438:	91 1d       	adc	r25, r1
 43a:	96 95       	lsr	r25
 43c:	87 95       	ror	r24
 43e:	97 f9       	bld	r25, 7
 440:	08 95       	ret

00000442 <_exit>:
 442:	f8 94       	cli

00000444 <__stop_program>:
 444:	ff cf       	rjmp	.-2      	; 0x444 <__stop_program>
